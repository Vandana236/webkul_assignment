import 'package:flutter/material.dart';
import '../database/database_helper.dart';
import '../model/users.dart';
import 'login.dart';

class SignUpScreen extends StatefulWidget {
  @override
  State<SignUpScreen> createState() => _SignUpScreenState();
}

class _SignUpScreenState extends State<SignUpScreen> {
  final TextEditingController nameController = TextEditingController();
  final TextEditingController emailController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();
  final TextEditingController confirmPasswordController = TextEditingController();
  final _formKey = GlobalKey<FormState>();


  final DatabaseHelper databaseHelper = DatabaseHelper();
  void signUp() async {
    final name = nameController.text;
    final email = emailController.text;
    final password = passwordController.text;
    final confirmPassword = confirmPasswordController.text;

    if (password == confirmPassword) {
      final user = User(
        id: 0, // Set a default value for the ID, as it will be auto-generated by the database.
        name: name,
        email: email,
        password: password,
      );

      await databaseHelper.signUpUser(user);
      print("Sucess");
      Navigator.push(context, MaterialPageRoute(builder: (context) => LogIn()));

      // Show a success message or navigate to the sign-in screen.
    } else {
      var snackBar = const SnackBar(content: Text('Password and Confirm Password should match.'));
      ScaffoldMessenger.of(context).showSnackBar(snackBar);
      // Show an error message for password mismatch.
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body:  Padding(
          padding: const EdgeInsets.symmetric(horizontal: 20,vertical: 60),
          child: SingleChildScrollView(
            child: Form(
              key: _formKey,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  GestureDetector(
                    onTap: (){
                      Navigator.pop(context);
                      print("back");
                    },
                    child: const Icon(Icons.arrow_back,
                      color: Color(0xFF00008B),
                    ),
                  ),
                   const SizedBox(height: 20,),
                  const Center(
                      child: Text("Sign Up",
                        style: TextStyle(
                            fontSize: 35,
                            color: Color(0xFF00008B),
                            fontWeight: FontWeight.bold),
                      )
                  ),
                  const SizedBox(height: 40,),
                  const Text("Create your Account",
                    style: TextStyle(
                        fontSize: 20,
                        color: Colors.black54,
                        fontWeight: FontWeight.w500),
                  ),
                  const SizedBox(height: 16.0),
                  TextFormField(
                    controller: nameController,
                    validator: (value) {
                      if (value == null || value.isEmpty) {
                        return 'This field is required';
                      }
                      return null; // Return null if the input is valid
                    },
                    decoration: const InputDecoration(
                      labelText: 'Name',
                    ),
                  ),
                  const SizedBox(height: 10,),
                  TextFormField(
                    controller: emailController,
                    validator: (val) {
                      if (val == "") {
                        return "Please enter email aadress";
                      } else {
                        final bool emailValid =
                        RegExp(r'^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$')
                            .hasMatch(val!.trim());
                        if (emailValid == true) {
                          return null;
                        } else {
                          return "please enter valid email address";
                        }
                      } // Return null if the input is valid
                    },
                    decoration: const InputDecoration(
                      labelText: 'Email',
                    ),
                  ),
                  const SizedBox(height: 16.0),
                  TextFormField(
                    controller: passwordController,
                    validator: (val) {
                      if (val!.isEmpty) {
                        return 'Password is required';
                      }
                      // if (value.length < 6) {
                      //   return 'Password must be at least 6 characters long';
                      // }
                      return null;
                    },
                    obscureText: true,
                    decoration: const InputDecoration(
                      labelText: 'Password',
                    ),
                  ),
                  const SizedBox(height: 16.0),
                  TextFormField(
                    controller: confirmPasswordController,
                    validator: (value) {
                      if (value!.isEmpty) {
                        return 'Confirm Password is required';
                      }
                      // if (value.length < 6) {
                      //   return 'Password must be at least 6 characters long';
                      // }
                      return null;
                    },
                    obscureText: true,
                    decoration: const InputDecoration(
                      labelText: 'Confirm Password',
                    ),
                  ),
                  const SizedBox(height: 40,),
                  ElevatedButton(
                      onPressed: (){
                        if(_formKey.currentState!.validate()){
                          signUp();
                        }
                    },
                    style: ButtonStyle(
                      backgroundColor: MaterialStateProperty.all<Color>(const Color(0xFF00008B)),

                      minimumSize: MaterialStateProperty.all(const Size(350, 50)), // Adjust the desired size
                    ),
                    child: const Text('Sign Up',
                      style: TextStyle(
                        fontSize: 18,),),
                  ),
                  const SizedBox(height: 50.0),
                ],
              ),
            ),
          ),
        )
    );
  }
}
